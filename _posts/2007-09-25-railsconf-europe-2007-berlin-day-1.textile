--- 
title: Railsconf Europe 2007 Berlin - Day 1
sections: 
- english
- coding
- life
tags: 
- railsconfeurope07
- day1
filter: 
- textile
description: Railsconf Europe 2007 Berlin - Day 1 summary
blog_post: true
layout: post
created_at: 2007-09-25 13:09:47.526917 +02:00
---




h2. Day 1

h3. Keynote: DHH


Rails 2.0 is coming, yay. David showed the first version of the "blog in 15 minutes" video. Which seemed to include very, very complicated steps (Setting up apache, creating the databases). It really showed how spoiled we Rails developers are and reminds me of the pain I had to suffer when I did Java development. I also liked the frenche cheese and wine image in his presentation. I'd love to have some! :)


h3. Deployment and Continuous Integration from the Trenches Fernand Galiana

The title of the talk was a bit misleading. It was only about capistarno 2.0 but turned out to be very useful for me. The new deployment strategies (tar file, svn cache) and dependency checks (for gems) are features which I'll definitely use when we'll switch to cap 2.


h3. Meta-Magic in Rails: Become a Master Magician Dr. Nic Williams

Well... there's not much to say. If you ever have the chance to see a talk by Dr.Nic or just speak to him in person: Take the chance. That was a very entertaining talk and I learned a few new metaprogramming tricks as well. I also liked these funny little comments about Java... "because we're cool and they're not". If any Java developer reads this and feels offended... Try to pick up some sense of humour... and read "this":http://www.jroller.com/obie/entry/top_10_reasons_why_java ;-)
 
 
h3. Really Scaling Rails Britt Selvitelle,
 
Not so much new stuff for me here... I didn't really understand why BIG-IP => Apache 2.2 => mongrel is faster than BIG-IP => mongrel. Jason Hoffman said that the latter was faster and Britt said that the former was faster... I'm a bit confused but - as with all things - it might depend on the application and you just have to find out for your self. And one thing to notice: If you want to scale web applications: Find out wich parts doesn't have to be real time for the user doing the request and send these tasks off to a queuing system of any kind.
 
 
h3. REST, Legacy stuff => Lightning Talks

The talk about legacy and REST somehow was canceled. I've been a bit late due to talks in the break so I didn't realized that the talk was cancled until the second speaker turned up. David Cheminzkey of Rspec fame should rspec view tests and story tests which I found very impressing. That really helped me to understand the philosphy of rspec. Bascially you can define what your app should do and get testing and a executable specification at the same time. Brilliant!
 
Matt Wood of the Sanger institute was also very impressive. He explaind how the institute is replacing 10 year old perl scripts piece by piece with ruby and Rails applications. "Does Rails Scale?" - They move terabytes of data per day and per cluster node around - with rails applications...
 
  
h3.  Beyond Startups: Rails Demand in the Global 2000 Jonathan Siegel

That talk was a bit strange. Not so much new stuff in there for me. Big companies starting to use Rails for different things and are happy with it.


h3. "The Rest of REST Roy T. Fielding":http://conferences.oreillynet.com/cs/railseurope2007/view/e_sess/14847

This talk was also strange but for a different reason. Some parts of it very entertaining and interesting other parts where just to abstract for me. And there where to many words on those slides. Seven is ok, maybe twelve but not twelve lines... It was very interesting to hear how the whole web evolved and that you can surf the complete web in one hour or so (if there are only 50 web servers :-))


h3.  Rails and the Next Generation Web Craig R. McClanahan  
 
The best quote of his talk "Developing web applications in Java after working with Rails would probably not be a particularly pleasant experience". He mentioned one thing I concur with: There are plugins who should be written more abstract so that you can use them with any Object and not only with ActiveRecord. That's one thing about Java which I've found really good: explicit interfaces. You can do the same, or even better things with ruby and duck typing, but you have to force yourself to do it, the language won't...

h3. Rejectconf

We managed to find the Rejectconf location but we arrived a bit late. So the best seats were already taken. Nevertheless I really liked the short presentations and got me excited to attend the next "Pecha Kucha":http://www.pechakucha-stuttgart.de/ event in Stuttgart. Thomas Fuchs had really nice C64 Design slides and this awesome 3 colour keynote transition. Dr Nic posted a "video of his talk":http://www.viddler.com/explore/crafterm/videos/6/ More info about "RejectConf":http://www.rug-b.de/wiki/show/RejectConf
